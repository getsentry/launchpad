# Cursor Rules for app-size-analyzer

This is a Python CLI tool for analyzing iOS and Android app bundle sizes, similar to Emerge Tools.

## Project Structure
- `src/app_size_analyzer/` - Main package source code
- `tests/` - Test files (pytest)
- `tests/artifacts/` - Sample app bundles for testing
- `legacy/` - Legacy Swift code (reference only, not to be used)

## Development Guidelines

### Python
- Use Python 3.11+ with type hints
- Follow PEP 8 and black formatting (line length 100)
- Use `pytest` for testing
- Use `click` for CLI interface
- Use `lief` for Mach-O binary analysis

### Code Quality
- Always include type hints
- Write comprehensive tests
- Use descriptive variable and function names
- Follow Sentry's Python best practices

### Testing
- Unit tests in `tests/unit/`
- Integration tests in `tests/integration/`
- Use sample artifacts from `tests/artifacts/`
- Prefer pytest fixtures for setup

### CLI Development
- Use `click` library for commands
- Support `--verbose` flag for debugging
- Always validate input files
- Provide helpful error messages

### Dependencies
- Core: `click`, `lief`, standard library
- Development: `pytest`, `black`, `flake8`, `mypy`
- No legacy dependencies (no Capstone, no S3)

### Debugging
- Use VSCode/Cursor debug configurations
- Test with sample artifacts
- Check performance for large binaries

## Commands Available
- `make help` - Show all available commands
- `make test` - Run all tests
- `make dev-setup` - Set up development environment
- `make lint` - Run linting
- `make format` - Format code

## When suggesting code:
1. Always include proper type hints
2. Add error handling and validation
3. Consider performance implications
4. Follow existing patterns in the codebase
5. Include relevant tests