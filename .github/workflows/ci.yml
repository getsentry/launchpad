name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Check lint
        run: make check-lint

      - name: Check format
        run: make check-format

      - name: Check types
        run: make check-types

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: adopt

      - name: Setup bundletool
        run: |
          curl https://github.com/google/bundletool/releases/download/1.18.1/bundletool-all-1.18.1.jar -4 -sL -o 'bundletool.jar'
          echo '#!/bin/bash' > bundletool
          echo 'java -jar "$(dirname "$0")/bundletool.jar" "$@"' >> bundletool
          chmod +x bundletool
          echo "$(pwd)" >> $GITHUB_PATH
          ./bundletool version

      - name: Install dependencies
        run: make install-dev

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests
        run: make test-integration

      - name: Test CLI installation and basic functionality
        run: |
          make run-cli ARGS="--help"

  build:
    runs-on: ubuntu-latest
    needs: [check, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Build package
        run: make build

      - name: Verify build artifacts
        run: |
          ls -la dist/
          # Create a fresh venv for testing the wheel installation
          python -m venv test-venv
          test-venv/bin/pip install dist/*.whl
          # Install dependencies that the package needs
          test-venv/bin/pip install -r requirements.txt
          test-venv/bin/launchpad --help

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7
