name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: read

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Check lint
        run: make check-lint

      - name: Check format
        run: make check-format

      - name: Check types
        run: make check-types

      - name: Check deps
        run: make check-deps

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Build Docker image with test fixtures
        run: docker build --build-arg TEST_BUILD=true -t launchpad-test .

      - name: Run all tests in Docker
        run: |
          docker run --rm \
            -e LAUNCHPAD_ENV=development \
            -e LAUNCHPAD_HOST=localhost \
            -e LAUNCHPAD_PORT=2218 \
            -e KAFKA_BOOTSTRAP_SERVERS="localhost:9092" \
            -e KAFKA_GROUP_ID="launchpad-test" \
            -e KAFKA_TOPICS="preprod-artifact-events" \
            launchpad-test python -m pytest tests/ -v --tb=short

      - name: Test CLI installation and basic functionality in Docker
        run: |
          docker run --rm \
            -e LAUNCHPAD_ENV=development \
            -e LAUNCHPAD_HOST=localhost \
            -e LAUNCHPAD_PORT=2218 \
            launchpad-test launchpad --help

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Install dependencies
        run: ./scripts/deps --print-paths >> "$GITHUB_PATH"

      - name: Coverage
        run: make coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: getsentry/launchpad

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: junit.xml

  build:
    runs-on: ubuntu-latest
    needs: [check, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: pyproject.toml

      - name: Install dependencies
        run: make install-dev

      - name: Build package
        run: make build

      - name: Verify build artifacts
        run: |
          ls -la dist/
          # Create a fresh venv for testing the wheel installation
          python -m venv test-venv
          test-venv/bin/pip install dist/*.whl
          # Install dependencies that the package needs
          test-venv/bin/pip install -r requirements.txt
          test-venv/bin/launchpad --help

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
          retention-days: 7
