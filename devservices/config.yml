# Ignored by docker compose, used by devservices
x-sentry-service-config:
  version: 0.1
  service_name: launchpad
  dependencies:
    redis:
      description: Shared instance of redis used by sentry services
      remote:
        repo_name: sentry-shared-redis
        branch: main
        repo_link: https://github.com/getsentry/sentry-shared-redis.git
    kafka:
      description: Shared instance of kafka used by sentry services
      remote:
        repo_name: sentry-shared-kafka
        branch: main
        repo_link: https://github.com/getsentry/sentry-shared-kafka.git
    launchpad:
      description: Service that powers preprod artifact analysis
  modes:
    default: [redis, kafka]
    containerized: [redis, kafka, launchpad]

services:
  launchpad:
    image: ghcr.io/getsentry/launchpad:latest
    ports:
      - 127.0.0.1:1218:1218 # Bind to localhost only - no external access
      - 127.0.0.1:1219:1219 # Bind to localhost only - no external access
    command:
      - devserver
      - --${LAUNCHPAD_NO_WORKERS:+no-workers}
    healthcheck:
      test: curl -f http://localhost:1218/health_envoy
      interval: 5s
      timeout: 5s
      retries: 3
    environment:
      PYTHONUNBUFFERED: 1
      LAUNCHPAD_SETTINGS: docker
      DEBUG: 1
      DEFAULT_BROKERS: kafka:9093
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: 1
      SENTRY_SPOTLIGHT: "http://host.docker.internal:8969/stream"
      # Security settings for internal service
      LAUNCHPAD_HOST: "0.0.0.0" # Inside container, but port binding restricts access
      REQUIRE_INTERNAL_AUTH: "false" # Disable for development
      ALLOWED_HOSTS: "127.0.0.1,localhost,launchpad"
    platform: linux/amd64
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - devservices
    labels:
      - orchestrator=devservices
    restart: unless-stopped

networks:
  devservices:
    name: devservices
    external: true
